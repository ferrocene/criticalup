# SPDX-FileCopyrightText: The Ferrocene Developers
# SPDX-License-Identifier: MIT OR Apache-2.0

---

name: "Use Ferrocene"
description: "Use Ferrocene"
inputs:
  token:
    description: The CriticalUp token to use (use a GHA Secret)
    required: true
  uninstall-rustup:
    description: "If `rustup` should be uninstalled as well, ensuring only Ferrocene can be used (conflicts with `toolchain-link: true`)"
    required: false
    default: "false"
  toolchain-link:
    description: "If a `rustup` toolchain should be configured, allowing, for example `cargo +ferrocene build` (conflicts with `uninstall-rustup: true`)"
    required: false
    default: "true"

runs:
  using: composite
  steps:
    - name: Remove Rust
      if: ${{ inputs.uninstall-rustup == 'true' }}
      shell: bash
      run: |
        rm -rf ~/.rustup
        rm -rf ~/.cargo

    - name: Install Ferrocene
      shell: bash
      run: |
        curl --proto '=https' --tlsv1.2 -LsSf https://github.com/ferrocene/criticalup/releases/latest/download/criticalup-installer.sh | sh
        criticalup auth set ${{ inputs.token }}
        criticalup install

    - name: Link `ferrocene` toolchain in `rustup`
      if: ${{ inputs.toolchain-link == 'true' }}
      shell: bash
      run: |
        criticalup link create

    - name: Add Ferrocene to path
      shell: bash
      run: |
        ${{ runner.os == 'Linux' && 'echo "Adding to path: $HOME/.local/share/criticalup/proxy/bin"' || '' }}
        ${{ runner.os == 'Linux' && 'echo "$HOME/.local/share/criticalup/proxy/bin" >> $GITHUB_PATH' || '' }}

        ${{ runner.os == 'Windows' && 'echo "Adding to path: $HOME/AppData/Roaming/criticalup/proxy/bin"' || '' }}
        ${{ runner.os == 'Windows' && 'echo "$HOME/AppData/Roaming/criticalup/proxy/bin" >> $GITHUB_PATH' || '' }}

        ${{ runner.os == 'macOS' && 'echo "Adding to path: $HOME/Library/Application Support/criticalup/proxy/bin"' || '' }}
        ${{ runner.os == 'macOS' && 'echo "$HOME/Library/Application Support/criticalup/proxy/bin" >> $GITHUB_PATH' || '' }}

    - name: Output $GITHUB_PATH'
      shell: bash
      run: |
        echo $PATH
