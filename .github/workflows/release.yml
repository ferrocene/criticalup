# SPDX-FileCopyrightText: The Ferrocene Developers
# SPDX-License-Identifier: MIT OR Apache-2.0

---

name: Release
on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+*'

permissions:
  # Allow write access to the source code to enable release publishing.
  contents: write

jobs:
  # We don't matrix this so each job's outputs can be referred to individually without hacks
  build:
    strategy:
      matrix:
        include:
          - runner: macos-latest
            target: aarch64-apple-darwin
          - runner: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            glibc: "2.32"
          - runner: ubuntu-24.04-arm
            target: aarch64-unknown-linux-gnu
            glibc: "2.32"
          - runner: windows-latest
            target: x86_64-pc-windows-msvc
    uses: ./.github/workflows/build.yml
    secrets: inherit
    with:
      runner: ${{ matrix.runner }}
      target: ${{ matrix.target }}
      glibc: ${{ matrix.glibc }}
      release: true

  package:
    secrets: inherit
    uses: ./.github/workflows/package.yml
    with:
      sign: true

  docs:
    uses: ./.github/workflows/docs.yml
    secrets: inherit
    with:
      deploy: true

  release:
    runs-on: ubuntu-latest
    needs:
      - build
      - package
      - docs
    steps:
      - uses: actions/checkout@v4
      
      - name: Install `cargo-binstall`
        run: curl -L --proto '=https' --tlsv1.2 -sSf https://raw.githubusercontent.com/cargo-bins/cargo-binstall/main/install-from-binstall-release.sh | bash

      - name: Install nu shell
        run: cargo binstall nu

      - name: Get metadata
        id: metadata
        shell: nu {0}
        run: |
          $env.VERSION = (open crates/criticalup/Cargo.toml | get package.version)
          echo $"VERSION=($env.VERSION)\n" | save -a $env.GITHUB_OUTPUT

          $env.DATE = (date now | format date "%Y-%m-%d")
          echo $"DATE=($env.DATE)\n" | save -a $env.GITHUB_OUTPUT

      - name: Make release-specific scripts and notes
        shell: nu {0}
        run: |
          mkdir artifacts
          open ci/criticalup-installer.ps1 | str replace --all "%REPLACE_VERSION%" "${{ steps.metadata.outputs.VERSION }}" | save -a artifacts/criticalup-installer.ps1
          open ci/criticalup-installer.sh | str replace --all "%REPLACE_VERSION%" "${{ steps.metadata.outputs.VERSION }}" | save -a artifacts/criticalup-installer.sh
          
          open ci/install-instructions.md | str replace --all "%REPLACE_VERSION%" "${{ steps.metadata.outputs.VERSION }}" | save -a install-instructions.md

      - name: Upload powershell installer
        id: installer-ps1
        uses: actions/upload-artifact@v4
        with:
          name: criticalup-installer.ps1
          path: artifacts/criticalup-installer.ps1
          if-no-files-found: error
          retention-days: 7

      - name: Upload bash installer
        id: installer-sh
        uses: actions/upload-artifact@v4
        with:
          name: criticalup-installer.sh
          path: artifacts/criticalup-installer.sh
          if-no-files-found: error
          retention-days: 7

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          pattern: criticalup-*
          merge-multiple: true

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          prerelease: true
          draft: true
          name: ${{ steps.metadata.outputs.VERSION }} - ${{ steps.metadata.outputs.DATE }}
          files:
            artifacts/*
          body_path: install-instructions.md
